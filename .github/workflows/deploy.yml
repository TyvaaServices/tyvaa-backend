name: Deploy to Koyeb

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
      - staging
      - prod

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    strategy:
      matrix:
        node-version: [ 22.x ]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set NODE_ENV to test
        run: echo "NODE_ENV=test" >> $GITHUB_ENV

      - name: Run tests
        run: npm test

  quality:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v5
        with:
          projectBaseDir: .
        env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}

  dockerize:
    needs: [test, quality]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USER }}/backend-tyvaa:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USER }}/backend-tyvaa:latest

#  Deployment is currently disabled. To enable, uncomment the section below.
#  deploy:
#     needs: [dockerize]
#     runs-on: ubuntu-latest
#     env:
#       DATABASE_URL: ${{ secrets.DATABASE_URL }}
#       KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}
#     steps:
#       - uses: actions/checkout@v3
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.0.0
#       - name: Terraform Init
#         working-directory: ./infra
#         run: terraform init
#         env:
#           DATABASE_URL: ${{ secrets.DATABASE_URL }}
#           KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}
#       - name: Terraform Validate
#         working-directory: ./infra
#         run: terraform validate
#       - name: Check if service exists and import it
#         working-directory: ./infra
#         run: |
#           # Store service ID if it exists
#           SERVICE_ID=$(terraform state list koyeb_service.backend_service 2>/dev/null || echo "")
#           if [ -z "$SERVICE_ID" ]; then
#             echo "Service not in Terraform state, checking if it exists in Koyeb..."
#             # Get the service ID from Koyeb using the API
#             EXISTING_SERVICE_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.KOYEB_TOKEN }}" \
#               "https://app.koyeb.com/v1/services?name=backend-tyvaa-service" | \
#               jq -r '.services[0].id')
#             if [ "$EXISTING_SERVICE_ID" != "null" ] && [ -n "$EXISTING_SERVICE_ID" ]; then
#               echo "Found existing service with ID: $EXISTING_SERVICE_ID, importing into Terraform state..."
#               terraform import koyeb_service.backend_service $EXISTING_SERVICE_ID
#               echo "Service imported successful"
#             else
#               echo "No existing service found, will create a "
#             fi
#           else
#             echo "Service already in Terraform state: $SERVICE_ID"
#           fi
#       - name: Terraform Plan
#         working-directory: ./infra
#         run: terraform plan -var="database_url=${{ secrets.DATABASE_URL }}"
#       - name: Terraform Apply
#         working-directory: ./infra
#         run: terraform apply -auto-approve -var="database_url=${{ secrets.DATABASE_URL }}" -var="docker_hub_user=${{ secrets.DOCKER_HUB_USER }}"
#
#
#
#


